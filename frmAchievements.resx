<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBwgHBgkIBwgKCgkLDRYPDQwMDRsUFRAWIB0iIiAdHx8k
        KDQsJCYxJx8fLT0tMTU3Ojo6Iys/RD84QzQ5Ojf/2wBDAQoKCg0MDRoPDxo3JR8lNzc3Nzc3Nzc3Nzc3
        Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzf/wAARCAB7ANsDASIAAhEBAxEB/8QA
        GgABAQEBAQEBAAAAAAAAAAAAAAMCBAUGAf/EADQQAAEEAQMDAgUCAwkAAAAAAAABAgMREgQTIQUxYUFR
        IlJxgZEVMhRCsSM0oaLB0eHw8f/EABoBAQEBAQEBAQAAAAAAAAAAAAABAgMEBgX/xAAgEQEBAQACAgID
        AQAAAAAAAAAAEQECEgMTITEEQVEU/9oADAMBAAIRAxEAPwD5vMZkrFn1VfJevVcxmSsWKevVcxmSsWKe
        vVcxmSsWKevVcxmSsWKevVcxmSsWKevVcxmSsWKevVcxmSsWKevVcxmSsWKevVcxmSsWKevVcxmSsWKe
        vVcxmSsWKevVcxmSsWKevVcxmSsWKevU1dXcI5VVETuq0h6SQMd3aQm6etXH3JHX3Z+0ViVNM6Zz0aqS
        IzBU5Xi7/wC+5HMrJq5dO1kM8bZmoiqqSJfPhTh3OCO2fLpzGZzbg3AsdOYzObcG4COnMZnNuDcBHTmM
        zm3BuAjpzGZzbg3AR05jM5twbgI6cxmc24fm4COrMZnNuDcBHTmMzm3BuAjpzGZzbg3AR05jM5twbl9g
        R05jIzFp55OWxrXuvBb+Cf8AO0MbyzP2t/FMTTMnR6052Ney1/5+S0OuY7+dPufPI5USrWruvIRa7cDO
        Ry8HHf2+pkbDqmK16NW/VDxOoaCTSrmlviXs5E7fU54tXLEvwuVfCnoafq7VTDUM+FeF9bLc1zzh5PFv
        x848uxZ2avTxOuXRuRzPVnqhwkr0cd7fONWLM2LJWo1YszYsUjVizNixSNWLM2LFI1YszYsUjVizNixS
        NWLM2LFI1YszYsUi2mSN+ojZKqoxy05UP2dYkVqRNc3j4rdaX7ITa1EVFcuH9SjdUkX92YjXfO9Mnf7J
        9hUi0Ohkc3cmVIY/mf6/Y9PRQdOiidM6diRsdisjkVVVfZEPBfI+Rbkcrl93LZXTzsZHJHM1zmPpaatc
        p/wqipvDd+3q9S1zYXxfwy7kUkaPa56UvdUVK+qHB+oS/KR1WqXUbabccbI0pjGJwif6kLGanr4/xmxZ
        ixZiu0bs/LM2LFIqx6tXhaNKmfK9/chZuN/NKWpvFpzXN5VOPcydMalF0zJOy4qoZ7T7cVizc2mli/c2
        090I/UjWTfpuxZi0FoKsbsWYsWgpG7FmLFikbsWYs01jn3i1y/RLFI/bFiKKSV6NiY56r6Ienp+moynT
        ra/KnZCsc+fHh9uGGB8vujfcs9scDb/m89zs1UrYY7Xj2RPU8eSRZHZO7hnjefy/XOyW1FmLFkrrG7Fm
        LFikbsWYsWKR+A3iMRDswDeIxEOzB0wdP1M+yrI6bM5Wxvc5Eaqp359PuRxO/pksLLbqlcsGSWxrqXni
        0EN5OSJ/OK9zsid6KcmqhbBqHxxyJI1q/C9PVCsEmXwu4d6KXMY5Y9KNUXh6WfknT4Z0ttIpiJa4d+Tr
        Z6Fjy7u8d+HlzdIlb+xb8Kckmj1Ea/FE77JZ9PG5ydl/JRHov7mIvkdVz8nlx+3xqoqLSpSij7F0cEiU
        +FF+vJNen6F/fTt+3A6t/wCvj+8fJA+r/StB6af/ADKab07RsW2wN+6qo66b+Zw/j5WKGWZ2MUbnr7Il
        nv6Dps6bT9TMrEYlbbV79+53seyNtRsSrpqNREtToa1zmpSFzjjh5fyuf1mRxMgigjwhYjW/1+pDVPZp
        49ybjjhPVTp12rg0Kc1JMvZvsfNaqeTVSLJKtqvbwNTweLlz3tyT1M79RKr3r9E9iRvEpAsTJLmi3GUv
        wo7Hn6mI/RzZ9Iq1UWlTk/D3Fk0Op0qajVQP/s3JFTJPiVtcd/Y8bHhBEznWAbxGIi1gG8RiIVShRTAY
        HSOVToUUwGAhU6FFMBgIVKj9opgMBCtwah0fD7c09LSybio2L4lX09TysDu0LUi0eqnuntRGJXfmwxy4
        5r0ke1JVjX96cKiKi0WRqr5PP6NKkMjpJkZtMbxx3U0nVGZuVYlRFVaoY4eTx7+notY72Uo2J3t/icLO
        qwJ6v/Bv9Ygb2Vy/Yrz74+f8dyQr6qhtsFr3/PB5UnW218Ebl+tIcU/VNTKlJTE8INXj+P5N35fQOdoN
        E3OeVMqWmoeN1Dr8kiLHombTPmVOV+x5L8nuVz3K5V9VXkzgR6uPg45t351hyue5XPVVcvdVPyimAwDv
        U6FFMBgIVOhRTAYCFToUUwGAhU6FFMBgIV1YeBh4LAsc++I4eBh4LAQ74jh4GHgsBDviOHgYeCwEO+I7
        fg2ltY5uNovuboCHfEEjcq29brsidkP3AsKEPZiO2MPBahQO+I7Y2/BahQO+I4eBh4LAQ74jh4GHgsBD
        viOHgYeCwEO+I4eBh4LAQ74jh4GHgsBDviOHgYeCwEO+N4jEsDTx3UcRiWALqOIxLAF1HEYlgC6jiMSw
        BdRxGJYAuo4jEsAXUcRiWALqOIxLAF1HEYlgC6jiMSwBdRxGJYAuo4jEsAXUcRiWALr/2Q==
</value>
  </data>
</root>